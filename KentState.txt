//Rextester.Program.Main is the entry point for your code. Don't change it.
//Compiler version 4.0.30319.17929 for Microsoft (R) .NET Framework 4.5

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace Rextester
{
    public class Program
    {
        public static void Main(string[] args)
        {
            //Your code goes here
            Console.WriteLine("Hello, world!");
            
            try{
            int retValue = Multiply("101,102,103", ',');
            Console.WriteLine(retValue);   
            }
            catch{
                 Console.WriteLine("Negatives not allowed!");
            }
        }
        
        public static int Multiply(string inputValue, char splitCharcter){
            
            if(String.IsNullOrWhiteSpace(inputValue)){
                    return 0;
            }
            else {
                String[] splitValue;
                int multipliedValue = 1;
                int numValue;
                bool isAllGreaterThanHun = true;
                
                splitValue = inputValue.Split(splitCharcter);
                    
                if(inputValue.Contains(splitCharcter))
                {   
                   IEnumerable<string> query = from word in splitValue  
                            orderby word  
                            select word;  
                 
                   foreach(string number in splitValue){
                       bool parsed = Int32.TryParse(number, out numValue);
                       if(numValue < 0){
                           //Throw exception in case of negative value
                           throw new Exception("Negatives not allowed"); 
                       }
                      
                        if(parsed && (numValue >=0 && numValue <=100)){
                            multipliedValue = multipliedValue * numValue;
                            isAllGreaterThanHun = false;
                        }
                    }
                    
                    if(isAllGreaterThanHun){
                        multipliedValue = 0; 
                    }
                }
                else{
                    bool parsed = Int32.TryParse(splitValue[0], out numValue);

                    if (!parsed)
                       multipliedValue = 0;
                    else
                        multipliedValue = numValue;
                }
              
                return multipliedValue;
            }
        }
    }
}